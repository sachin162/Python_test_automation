{"name": "test_get_links", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=111.0.5563.65)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00B43643]\n\t(No symbol) [0x00AD8981]\n\t(No symbol) [0x009DB35D]\n\t(No symbol) [0x009BE5DA]\n\t(No symbol) [0x00A2F0AB]\n\t(No symbol) [0x00A40936]\n\t(No symbol) [0x00A2B1F6]\n\t(No symbol) [0x00A00D57]\n\t(No symbol) [0x00A024FD]\n\tGetHandleVerifier [0x00DBB5F2+2513186]\n\tGetHandleVerifier [0x00DEB730+2710112]\n\tGetHandleVerifier [0x00DEECDC+2723852]\n\tGetHandleVerifier [0x00BF2250+640384]\n\t(No symbol) [0x00AE1142]\n\t(No symbol) [0x00AE6AD8]\n\t(No symbol) [0x00AE6BBB]\n\t(No symbol) [0x00AF09FB]\n\tBaseThreadInitThunk [0x76C700F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77AD7BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77AD7B8E+238]", "trace": "self = <tests.test_internet_heruko_Home.Test_Internet_Heruko_Landing object at 0x0000025D68E0BB50>\n\n    def test_get_links(self):\n        land = internet_heruko_landing_page(self.driver)\n>       all_ele_list = land.get_all_elements()\n\nC:\\Users\\sachin.kulkarni\\PycharmProjects\\Internet-Heruko-app-Test\\tests\\test_internet_heruko_Home.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\sachin.kulkarni\\PycharmProjects\\Internet-Heruko-app-Test\\Pages\\internet_heruko_landing.py:16: in get_all_elements\n    all_ele = self.driver.find_elements(By.XPATH ,loc.loc_list_of_links)\nC:\\Users\\sachin.kulkarni\\PycharmProjects\\Test_FrameWork\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:892: in find_elements\n    return self.execute(Command.FIND_ELEMENTS, {\"using\": by, \"value\": value})[\"value\"] or []\nC:\\Users\\sachin.kulkarni\\PycharmProjects\\Test_FrameWork\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025D68EF4220>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AD7BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AD7B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=111.0.5563.65)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00B43643]\nE       \t(No symbol) [0x00AD8981]\nE       \t(No symbol) [0x009DB35D]\nE       \t(No symbol) [0x009BE5DA]\nE       \t(No symbol) [0x00A2F0AB]\nE       \t(No symbol) [0x00A40936]\nE       \t(No symbol) [0x00A2B1F6]\nE       \t(No symbol) [0x00A00D57]\nE       \t(No symbol) [0x00A024FD]\nE       \tGetHandleVerifier [0x00DBB5F2+2513186]\nE       \tGetHandleVerifier [0x00DEB730+2710112]\nE       \tGetHandleVerifier [0x00DEECDC+2723852]\nE       \tGetHandleVerifier [0x00BF2250+640384]\nE       \t(No symbol) [0x00AE1142]\nE       \t(No symbol) [0x00AE6AD8]\nE       \t(No symbol) [0x00AE6BBB]\nE       \t(No symbol) [0x00AF09FB]\nE       \tBaseThreadInitThunk [0x76C700F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AD7BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AD7B8E+238]\n\nC:\\Users\\sachin.kulkarni\\PycharmProjects\\Test_FrameWork\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoSuchWindowException"}, "attachments": [{"name": "log", "source": "c2409986-971a-46e9-9b71-4d190d3dca01-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "584e302e-82d4-4459-9d2b-e41e30b0b151-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "74847f65-9c4b-4164-981c-904eb21b68b7-attachment.txt", "type": "text/plain"}], "start": 1678949404692, "stop": 1678949404952, "uuid": "7430f533-4dcc-49d3-bc87-d1a22c68789c", "historyId": "3edf1b4b8734f42373196e1f291eb786", "testCaseId": "96235d756a555e91d3fc6bdaeaf8452d", "fullName": "test_internet_heruko_Home.Test_Internet_Heruko_Landing#test_get_links", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('Setup_Browser')"}, {"name": "suite", "value": "test_internet_heruko_Home"}, {"name": "subSuite", "value": "Test_Internet_Heruko_Landing"}, {"name": "host", "value": "IN-3KbjRY0IfoGz"}, {"name": "thread", "value": "248-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_internet_heruko_Home"}]}